import requests

# üîê –ö–ª—é—á –æ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ API (–Ω–∞–ø—Ä–∏–º–µ—Ä, The Odds API)
EXTERNAL_API_KEY = "850b0f7258944b119358a2ce75350533"
EXTERNAL_API_URL = "https://api.the-odds-api.com/v4/sports/soccer_epl/odds/"

# üîê –ê–¥—Ä–µ—Å –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
LOCAL_SERVER_URL = "http://localhost:8000/api/feed"
LOCAL_SERVER_API_KEY = "your-client-key"

# –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –≤–Ω–µ—à–Ω–µ–≥–æ API
def fetch_external_data():
    params = {
        "regions": "eu",             # –ï–≤—Ä–æ–ø–∞
        "markets": "h2h",            # –∏—Å—Ö–æ–¥—ã (1X2)
        "oddsFormat": "decimal",
        "apiKey": EXTERNAL_API_KEY
    }
    response = requests.get(EXTERNAL_API_URL, params=params)
    if response.status_code == 200:
        print("‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ API")
        return response.json()
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code} ‚Äî {response.text}")
        return []

# –®–∞–≥ 2: –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –Ω–∞—à —Ñ–æ—Ä–º–∞—Ç
def transform_for_server(raw_data):
    tips = []
    for match in raw_data:
        if "bookmakers" not in match or not match["bookmakers"]:
            continue
        bookie = match["bookmakers"][0]
        outcomes = {o["name"]: o["price"] for o in bookie["markets"][0]["outcomes"]}
        tip = {
            "match_id": match.get("id", 0),
            "league": match.get("sport_title", "Unknown"),
            "team_home": match["home_team"],
            "team_away": match["away_team"],
            "tip": "home",  # –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ—é –ª–æ–≥–∏–∫—É
            "odds": outcomes.get(match["home_team"], 1.5),
            "confidence": 0.65  # —Ç–µ—Å—Ç–æ–≤–æ; –º–æ–∂–Ω–æ –ø—Ä–∏–∫—Ä—É—Ç–∏—Ç—å –º–æ–¥–µ–ª—å
        }
        tips.append(tip)
    return tips

# –®–∞–≥ 3: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä
def send_to_server(tips):
    headers = {"x-api-key": LOCAL_SERVER_API_KEY}
    response = requests.post(LOCAL_SERVER_URL, json=tips, headers=headers)
    if response.status_code == 200:
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {response.status_code} ‚Äî {response.text}")

if __name__ == "__main__":
    data = fetch_external_data()
    if data:
        transformed = transform_for_server(data)
        send_to_server(transformed)
